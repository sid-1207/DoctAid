<html>
  <head>
    <!-- Load TensorFlow.js -->
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs"></script>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
  integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <!-- Load Posenet -->
    <title>We-Care</title>
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow-models/posenet"></script>
    <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
 </head>

  <body style="background-color: black;height: 1200px;">
    <div class="container pt-5">
      <h2 class="display-5 text-center" style="color : #d30577">Match your Pose by inputing a video Url in the box</h2>
      <div class="row justify-content-center pt-5 mx-auto">
        <div class="col-4 mx-auto mt-5">
          <form>
            <input type="text" class="form-control" id="ytlink" value="" placeholder="Video URL" >
          </form>
        </div>
        </div>
        <div class="col-4 mx-auto text-center d-none">
          <div style="color: white;">
            Average Error 
            <div id="error" ></div>
        </div>
        </div>
        <div class="col-4 mx-auto my-5 pb-4 row justify-content-center">
          <button class="btn btn-danger mx-auto" onclick="onStart()"  >Start Pose Match</button>
        </div>

        <div class="col-4 mx-auto my-5 pb-4 row justify-content-center">
          <a class="btn btn-danger mx-auto" href="/" >Go to Home</a>
        </div>
      </div>  
    </div>

    <div class="container mb-0">
      <div class="row justify-content-center">
        <div class="col-md-6 mx-auto">
          <video id="inputVideo" width="500" height="500" autoplay muted playsinline></video>
        </div>
        <div class="col-md-6 mx-auto mt-5">
          <video id="ytvideo" width="500" height="400" src="" autoplay crossorigin='anonymous' playsinline controls></video>
          <canvas id="overlay" />
        </div>
      </div>
    </div>
    <div class="container">
      <div id="chartContainer" class=""></div>
    </div>
  </body>
  <!-- Place your code in the script tag below. You can also use an external .js file -->
  <script>
    var chart;
    chart = new CanvasJS.Chart("chartContainer", {
      animationEnabled: true,
      theme: "light2",
      title:{
        text: "Average Error in pose"
      },
      data: [{        
		    type: "line",
      	indexLabelFontSize: 16,
        dataPoints:[] 
      }]
    });
    chart.render();
    var flipHorizontal = false;
    var net = null;
    var isFaceDetectionModelLoaded = false;
    function onStart() {
      console.log("start");
      document.getElementById("ytvideo").src = document.getElementById("ytlink").value;
      onPlay()
    }
    async function onPlay() {
        const videoEl1 = document.getElementById('inputVideo')
        const videoEl2 = document.getElementById('ytvideo')
        if(!videoEl1 || !videoEl2 || videoEl1.paused || videoEl1.ended || videoEl2.paused || videoEl2.ended || !isFaceDetectionModelLoaded)
        return setTimeout(() => onPlay( ))
        const pose1 = await net.estimateSinglePose(videoEl1, {
            flipHorizontal: true
        });
        const pose2 = await net.estimateSinglePose(videoEl2, {
            flipHorizontal: true
        });
        if(pose1 && pose2) {
          let err = poseMatch(pose1,pose2)
          document.getElementById("error").textContent = err
          chart.options.data[0].dataPoints.push({y:err})
          chart.render();
        }
        setTimeout(() => onPlay())
    }
    async function run() {
        // load face detection and face expression recognition models
        net = await posenet.load()
        isFaceDetectionModelLoaded= true;
        // try to access users webcam and stream the images
        // to the video element
        const stream = await navigator.mediaDevices.getUserMedia({ video: {} })
        const videoEl = document.getElementById('inputVideo')
        videoEl.srcObject = stream
    }
    function poseMatch(pose1,pose2) {
      let sum = 0;
      for(let i=0; i<17; i++) {
        sum += ((pose1.keypoints[i].position.x*pose1.keypoints[i].score-pose2.keypoints[i].position.x*pose2.keypoints[i].score)**2 + (pose1.keypoints[i].position.y*pose1.keypoints[i].score-pose2.keypoints[i].position.y*pose2.keypoints[i].score)**2)**0.5
      }
      return (sum/17);
    }
    function updateResults() {}
    window.onload = run;
  </script>
</html>