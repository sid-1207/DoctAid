<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">
    <script src="https://js.stripe.com/v3/"></script>
    <title>Payment</title>
    <link rel="stylesheet" href="/css/checkout.css">
  </head>

<body>
  <br>
  <div class="container pl-5" style="font-size: 22px">
    <script src="https://cdn.lordicon.com//libs/frhvbuzj/lord-icon-2.0.2.js"></script>
    <lord-icon
        src="https://cdn.lordicon.com//qhviklyi.json"
        trigger="loop"
        colors="primary:#d30755,secondary:#ffffff"
        style="width:100px;height:100px">
    </lord-icon><a href="/" style="text-decoration: none; color: white"
      > <b>Go back</b></a
    >
  </div>

  
  <div
  class="container mx-auto px-auto"
  style="text-align: center;max-width:800px;"
>
  <div style="font-size: x-large; color: green">Please fill in your Credit Card Details to Complete the Payment</div>
  <br />
  <hr />
  <br />
</div>

 <div class="container">
  <div class="row">
    <div class="col-md-offset-3 col-md-6 mt-0 pt-0">
      <div class="sr-root">
        <div class="sr-main"  style="background-color: white; border-radius: 20%;">
          <h3 class="text-center" style="color:rgb(21, 21, 148);">Payment for Dr. <%= appointment.username %></h3>
          <form id="payment-form" class="sr-payment-form">
            <div class="sr-combo-inputs-row">
              <div class="sr-input sr-card-element" id="card-element"></div>
            </div>
            <div class="sr-field-error" id="card-errors" role="alert"></div>
            <button id="submit">
              <div class="spinner hidden" id="spinner"></div>
              <span id="button-text">Pay Rs. <%= amount %></span>
            </button>
          </form>
        </div>
      </div>
    </div>
  </div>
  <br>
  <br>  
</div>


<script>

  
var orderData = {
  items: [{ id: "doctor-payment" }],
  currency: "inr",
  app_id:"<%=appointment._id%>",
};

// Set your publishable key: remember to change this to your live publishable key in production
// See your keys here: https://dashboard.stripe.com/account/apikeys
var stripe = Stripe('pk_test_51IcWvrSIhRCyNTw3FC8BCIIp24EEWFJs0mup0TKd33nkZgaTK7LaXCGe4x0QamaeczSAbQtaZUkOr7sTu8mmT1P000YwZIhq8y');
var elements = stripe.elements();

// Set up Stripe.js and Elements to use in checkout form
var style = {
  base: {
    color: "#32325d",
  }
};

function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}
  var displayError = document.getElementById('card-errors');
  async function errorHandler(err) {
    if(err == "You need to be logged in first"){
      err=err+" Redirecting to Login Page ";
      displayError.textContent = err;
      await sleep(4000);
      window.location.href = "/login";
    } else {
      changeLoadingState(false);
      displayError.textContent = err;
    }
    changeLoadingState(false);
      displayError.textContent = err;
  }


var card = elements.create("card", { style: style });
card.mount("#card-element");

card.addEventListener('change', function(event) {
  if (event.error) {
    errorHandler(event.error.message);
  } else {
    errorHandler('');
  }
});

var form = document.getElementById('payment-form');

form.addEventListener('submit', function(ev) {
  ev.preventDefault();

  changeLoadingState(true);
  
  stripe.createPaymentMethod("card", card)
        .then(function(result) {
          if (result.error) {
            errorHandler(result.error.message);
          } else {
            orderData.paymentMethodId = result.paymentMethod.id;

            return fetch("/pay", {
              method: "POST",
              headers: {
                "Content-Type": "application/json"
              },
              body: JSON.stringify(orderData)
            });
          }
        })
        .then(function(result) {
          return result.json();
        })
        .then(function(response) {
          if (response.error) {
            errorHandler(response.error);
          } else {
            changeLoadingState(false);
            // redirect to /campgrounds with a query string
            // that invokes a success flash message
            window.location.href = '/paymentSuccessfull/<%=appointment._id%>'
          }
        }).catch(function(err) {
          errorHandler(err.error);
        });
});

// Show a spinner on payment submission
function changeLoadingState(isLoading) {
    if (isLoading) {
        document.querySelector("button").disabled = true;
        document.querySelector("#spinner").classList.remove("hidden");
        document.querySelector("#button-text").classList.add("hidden");
    } else {
        document.querySelector("button").disabled = false;
        document.querySelector("#spinner").classList.add("hidden");
        document.querySelector("#button-text").classList.remove("hidden");
    }
};
</script>

</body>
</html>